<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heroku.mapper.UPayMapper">
	<resultMap id="BaseResultMap" type="com.heroku.entity.UPay">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="pay" jdbcType="INTEGER" property="pay" />
		<result column="time" jdbcType="TIMESTAMP" property="time" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, pay, time
	</sql>
	<select id="selectByExample" parameterType="com.heroku.entity.UPayExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from "u_pay"
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from "u_pay"
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from "u_pay"
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.heroku.entity.UPayExample">
		delete from "u_pay"
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.heroku.entity.UPay">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			PostgreSQL
		</selectKey>
		insert into "u_pay" (pay, time)
		values (#{pay,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.heroku.entity.UPay">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			PostgreSQL
		</selectKey>
		insert into "u_pay"
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="pay != null">
				pay,
			</if>
			<if test="time != null">
				time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="pay != null">
				#{pay,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.heroku.entity.UPayExample"
		resultType="java.lang.Long">
		select count(*) from "u_pay"
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update "u_pay"
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.pay != null">
				pay = #{record.pay,jdbcType=INTEGER},
			</if>
			<if test="record.time != null">
				time = #{record.time,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update "u_pay"
		set id = #{record.id,jdbcType=INTEGER},
		pay = #{record.pay,jdbcType=INTEGER},
		time = #{record.time,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.heroku.entity.UPay">
		update "u_pay"
		<set>
			<if test="pay != null">
				pay = #{pay,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.heroku.entity.UPay">
		update "u_pay"
		set pay = #{pay,jdbcType=INTEGER},
		time = #{time,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>

</mapper>